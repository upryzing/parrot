name: Docker Test & Publish

on:
  push:
    # branches:
    #   - "main"
    tags:
      - "*"
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/docker.yml"
      - ".vscode/**"
      - "doc/**"
      - ".gitignore"
      - "LICENSE"
      - "README"
  pull_request:
    branches:
      - "main"
    paths:
      - "Dockerfile"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  base:
    runs-on: ubuntu-latest
    name: Build base image (${{ matrix.platform }})
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      # Configure build environment
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Authenticate with GHCR
      - name: Login to Github Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ matrix.platform }} # linux/arm64 #,linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/base:latest
          cache-from: type=gha,scope=buildx-base-arch
          cache-to: type=gha,scope=buildx-base-arch-${{ matrix.platform }},mode=max

  publish:
    needs: [base]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        project: [delta, bonfire, pigeon, dove, pushd]
        platform:
          - linux/amd64
          - linux/arm64
    name: Build ${{ matrix.project }} image (${{ matrix.platform }})
    steps:
      # Configure build environment
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Authenticate with ~~Docker Hub and~~ GHCR
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     registry: docker.io
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Resolve the correct project
      - uses: kanga333/variable-mapper@master
        id: export
        with:
          key: "${{ matrix.project }}"
          map: |
            {
              "delta": {
                "path": "crates/delta",
                "tag": "${{ github.repository_owner }}/server"
              },
              "bonfire": {
                "path": "crates/bonfire",
                "tag": "${{ github.repository_owner }}/bonfire"
              },
              "pigeon": {
                "path": "crates/services/pigeon",
                "tag": "${{ github.repository_owner }}/pigeon"
              },
              "dove": {
                "path": "crates/services/dove",
                "tag": "${{ github.repository_owner }}/dove"
              },
              "pushd": {
                "path": "crates/daemons/pushd",
                "tag": "${{ github.repository_owner }}/pushd"
              }
            }
          export_to: output

      # Configure metadata
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # removed docker.io/${{ steps.export.outputs.tag }}; re-add for dockerhub
          images: |
            ghcr.io/${{ steps.export.outputs.tag }}

      # Build crate image
      - name: Publish
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }} #linux/arm64 #,linux/amd64
          file: ${{ steps.export.outputs.path }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            BASE_IMAGE=ghcr.io/${{ github.repository_owner }}/base:latest
          labels: ${{ steps.meta.outputs.labels }}
